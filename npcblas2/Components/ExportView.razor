@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ICharacterBuildService CharacterBuildService
@inject IFileStorageService FileStorageService

<EditForm Model=@ExportModel OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="fileName" class="col-lg-2 col-form-label">Export to</label>
        <input @bind-value=@ExportModel.FileName class="form-control col-lg-7" id="fileName">
        <div class="col-lg-1">.json</div>
        <input class="btn btn-primary col-lg-2 float-lg-right" type="submit" value="Export"/>
    </div>
</EditForm>
@if (ExportedTo != null)
{
    <p>Completed export to @ExportedTo.</p>
}

@code {
    [Parameter]
    public EventCallback<string> OnRefresh { get; set; }

    private ExportModel ExportModel = new ExportModel();

    private string ExportedTo { get; set; }

    private async Task OnValidSubmit()
    {
        ExportedTo = null;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var fileName = ExportModel.FileName;
        if (!fileName.ToUpperInvariant().EndsWith(".JSON"))
        {
            fileName += ".json";
        }

        await CharacterBuildService.ExportToFileAsync(authState.User, FileStorageService, fileName);
        ExportedTo = fileName;
    }
}